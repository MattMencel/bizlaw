name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bizlaw_test
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable libpq-dev postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/bizlaw_test
        run: |
          bin/rails db:test:prepare

      - name: Run tests with coverage
        id: tests
        continue-on-error: true
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/bizlaw_test
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          bin/rspec
          bin/cucumber
          bin/rails test:system

      - name: Upload coverage to Coveralls
        if: always()
        uses: coverallsapp/github-action@v2

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

      - name: Lint code for consistent style
        if: always()
        run: bin/rubocop -f github

      - name: Scan for common Rails security vulnerabilities using static analysis
        if: always()
        run: bin/brakeman --no-pager

      - name: Scan for security vulnerabilities in JavaScript dependencies
        if: always()
        run: bin/importmap audit

      - name: Fail job if tests failed
        if: steps.tests.outcome == 'failure'
        run: |
          echo "Tests failed, but all other checks completed"
          exit 1
