name: CI

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  changed:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      all_changed_files: ${{ steps.changed.outputs.all_changed_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get changed files
        id: changed
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v46

      - name: List all changed files
        run: |
          echo "All changed files:"
          echo "${{ steps.changed.outputs.all_changed_files }}"

  lint:
    if: github.event_name == 'pull_request'
    needs: changed
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: |
          sudo apt-get update && \
          sudo apt-get install --no-install-recommends -y \
            build-essential \
            git \
            libyaml-dev \
            pkg-config \
            google-chrome-stable \
            postgresql-client

      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Lint code for consistent style
        run: bin/rubocop -f github --only-recognized-file-types ${{ needs.changed.outputs.all_changed_files }}
      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager --no-exit-on-warn
      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bizlaw_test
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable libpq-dev postgresql-client
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/bizlaw_test
        run: |
          bin/rails db:test:prepare
      - name: Run tests
        id: tests
        continue-on-error: true
        run: |
          bundle exec rspec --exclude-pattern spec/e2e/**/*_spec.rb
          bundle exec cucumber
          bundle exec rails test:system
      - name: Upload coverage to Coveralls
        if: always()
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/bizlaw_test
      - name: Keep screenshots from failed system tests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bizlaw_test
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable libpq-dev postgresql-client
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/bizlaw_test
        run: |
          bin/rails db:test:prepare
      - name: Run E2E tests
        id: e2e_tests
        run: |
          bundle exec rspec spec/e2e/
